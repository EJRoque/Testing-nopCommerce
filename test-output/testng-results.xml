<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-15T17:50:17 CST" name="Default suite" finished-at="2025-08-15T17:50:34 CST" duration-ms="16999">
    <groups>
    </groups>
    <test started-at="2025-08-15T17:50:17 CST" name="Default test" finished-at="2025-08-15T17:50:34 CST" duration-ms="16999">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:tests.LoginTest@6200f9cb]" started-at="2025-08-15T17:50:16 CST" name="setupReport" finished-at="2025-08-15T17:50:17 CST" duration-ms="171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTest@6200f9cb]" started-at="2025-08-15T17:50:17 CST" name="setup" finished-at="2025-08-15T17:50:19 CST" duration-ms="2042" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testEmptyEmailField()[pri:0, instance:tests.LoginTest@6200f9cb]" started-at="2025-08-15T17:50:19 CST" name="testEmptyEmailField" finished-at="2025-08-15T17:50:20 CST" duration-ms="1659" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyEmailField -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@6200f9cb]" started-at="2025-08-15T17:50:20 CST" name="tearDown" finished-at="2025-08-15T17:50:20 CST" duration-ms="138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEmptyEmailField status=SUCCESS method=LoginTest.testEmptyEmailField()[pri:0, instance:tests.LoginTest@6200f9cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTest@6200f9cb]" started-at="2025-08-15T17:50:20 CST" name="setup" finished-at="2025-08-15T17:50:23 CST" duration-ms="2234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testEmptyPasswordField()[pri:0, instance:tests.LoginTest@6200f9cb]" started-at="2025-08-15T17:50:23 CST" name="testEmptyPasswordField" finished-at="2025-08-15T17:50:24 CST" duration-ms="1198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyPasswordField -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@6200f9cb]" started-at="2025-08-15T17:50:24 CST" name="tearDown" finished-at="2025-08-15T17:50:24 CST" duration-ms="118" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEmptyPasswordField status=SUCCESS method=LoginTest.testEmptyPasswordField()[pri:0, instance:tests.LoginTest@6200f9cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTest@6200f9cb]" started-at="2025-08-15T17:50:24 CST" name="setup" finished-at="2025-08-15T17:50:26 CST" duration-ms="1779" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSuccessfulLogin()[pri:0, instance:tests.LoginTest@6200f9cb]" started-at="2025-08-15T17:50:26 CST" name="testSuccessfulLogin" finished-at="2025-08-15T17:50:27 CST" duration-ms="775" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessfulLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@6200f9cb]" started-at="2025-08-15T17:50:27 CST" name="tearDown" finished-at="2025-08-15T17:50:27 CST" duration-ms="148" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSuccessfulLogin status=SUCCESS method=LoginTest.testSuccessfulLogin()[pri:0, instance:tests.LoginTest@6200f9cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTest@6200f9cb]" started-at="2025-08-15T17:50:27 CST" name="setup" finished-at="2025-08-15T17:50:28 CST" duration-ms="1416" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testWrongEmail()[pri:0, instance:tests.LoginTest@6200f9cb]" started-at="2025-08-15T17:50:28 CST" name="testWrongEmail" finished-at="2025-08-15T17:50:30 CST" duration-ms="1938" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWrongEmail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@6200f9cb]" started-at="2025-08-15T17:50:30 CST" name="tearDown" finished-at="2025-08-15T17:50:30 CST" duration-ms="128" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWrongEmail status=SUCCESS method=LoginTest.testWrongEmail()[pri:0, instance:tests.LoginTest@6200f9cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTest@6200f9cb]" started-at="2025-08-15T17:50:30 CST" name="setup" finished-at="2025-08-15T17:50:32 CST" duration-ms="1734" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testWrongPassword()[pri:0, instance:tests.LoginTest@6200f9cb]" started-at="2025-08-15T17:50:32 CST" name="testWrongPassword" finished-at="2025-08-15T17:50:33 CST" duration-ms="1413" status="FAIL">
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: stale element not found
  (Session info: chrome=139.0.7258.127)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Build info: version: '4.32.0', revision: 'd17c8aa950'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [df1c84a72917d1def8615f20b40d612c, isElementDisplayed {id=f.8B347949ADCE501F8D121B94FE032696.d.888A67E9A80EEE3CAE61B4B387C21F49.e.60}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.127, chrome: {chromedriverVersion: 139.0.7258.68 (40ff94600b6e..., userDataDir: C:\Users\Personal\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60572}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:60572/devtoo..., se:cdpVersion: 139.0.7258.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (df1c84a72917d1def8615f20b40d612c)] -> xpath: //*[@id="main"]/div/div/div/div[2]/div[1]/div[2]/form/div[1]]
Session ID: df1c84a72917d1def8615f20b40d612c]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: stale element not found
  (Session info: chrome=139.0.7258.127)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Build info: version: '4.32.0', revision: 'd17c8aa950'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [df1c84a72917d1def8615f20b40d612c, isElementDisplayed {id=f.8B347949ADCE501F8D121B94FE032696.d.888A67E9A80EEE3CAE61B4B387C21F49.e.60}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.127, chrome: {chromedriverVersion: 139.0.7258.68 (40ff94600b6e..., userDataDir: C:\Users\Personal\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60572}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:60572/devtoo..., se:cdpVersion: 139.0.7258.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (df1c84a72917d1def8615f20b40d612c)] -> xpath: //*[@id="main"]/div/div/div/div[2]/div[1]/div[2]/form/div[1]]
Session ID: df1c84a72917d1def8615f20b40d612c
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.isDisplayed(RemoteWebElement.java:282)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy30.isDisplayed(Unknown Source)
at pages.LoginPage.isLoginErrorMessageDisplayed(LoginPage.java:76)
at tests.LoginTest.testWrongPassword(LoginTest.java:57)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWrongPassword -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@6200f9cb]" started-at="2025-08-15T17:50:33 CST" name="tearDown" finished-at="2025-08-15T17:50:34 CST" duration-ms="244" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWrongPassword status=FAILURE method=LoginTest.testWrongPassword()[pri:0, instance:tests.LoginTest@6200f9cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDownReport()[pri:0, instance:tests.LoginTest@6200f9cb]" started-at="2025-08-15T17:50:34 CST" name="tearDownReport" finished-at="2025-08-15T17:50:37 CST" duration-ms="3806" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownReport -->
      </class> <!-- tests.LoginTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
