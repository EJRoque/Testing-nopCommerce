<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-06-25T22:49:00 CST" name="Default suite" finished-at="2025-06-25T22:49:25 CST" duration-ms="24650">
    <groups>
    </groups>
    <test started-at="2025-06-25T22:49:00 CST" name="Default test" finished-at="2025-06-25T22:49:25 CST" duration-ms="24650">
      <class name="tests.RegisterTest">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:tests.RegisterTest@ae13544]" started-at="2025-06-25T22:49:00 CST" name="setupReport" finished-at="2025-06-25T22:49:00 CST" duration-ms="227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.RegisterTest@ae13544]" started-at="2025-06-25T22:49:00 CST" name="setup" finished-at="2025-06-25T22:49:04 CST" duration-ms="3763" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testEmptyRequiredFields()[pri:0, instance:tests.RegisterTest@ae13544]" started-at="2025-06-25T22:49:04 CST" name="testEmptyRequiredFields" finished-at="2025-06-25T22:49:05 CST" duration-ms="1516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyRequiredFields -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.RegisterTest@ae13544]" started-at="2025-06-25T22:49:05 CST" name="tearDown" finished-at="2025-06-25T22:49:05 CST" duration-ms="119" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEmptyRequiredFields status=SUCCESS method=RegisterTest.testEmptyRequiredFields()[pri:0, instance:tests.RegisterTest@ae13544] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.RegisterTest@ae13544]" started-at="2025-06-25T22:49:05 CST" name="setup" finished-at="2025-06-25T22:49:07 CST" duration-ms="1892" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testInvalidEmailFormat()[pri:0, instance:tests.RegisterTest@ae13544]" started-at="2025-06-25T22:49:07 CST" name="testInvalidEmailFormat" finished-at="2025-06-25T22:49:08 CST" duration-ms="1024" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidEmailFormat -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.RegisterTest@ae13544]" started-at="2025-06-25T22:49:08 CST" name="tearDown" finished-at="2025-06-25T22:49:08 CST" duration-ms="106" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidEmailFormat status=SUCCESS method=RegisterTest.testInvalidEmailFormat()[pri:0, instance:tests.RegisterTest@ae13544] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.RegisterTest@ae13544]" started-at="2025-06-25T22:49:08 CST" name="setup" finished-at="2025-06-25T22:49:10 CST" duration-ms="1988" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testMismatchedPasswords()[pri:0, instance:tests.RegisterTest@ae13544]" started-at="2025-06-25T22:49:10 CST" name="testMismatchedPasswords" finished-at="2025-06-25T22:49:21 CST" duration-ms="10706" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"#gender\-male"}
  (Session info: chrome=137.0.7151.120)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.32.0', revision: 'd17c8aa950'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [5e11e19f03bb697e1d9c9d079425ec6b, findElement {using=id, value=gender-male}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.120, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\Personal\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56569}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56569/devtoo..., se:cdpVersion: 137.0.7151.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 5e11e19f03bb697e1d9c9d079425ec6b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#gender\-male"}
  (Session info: chrome=137.0.7151.120)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.32.0', revision: 'd17c8aa950'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [5e11e19f03bb697e1d9c9d079425ec6b, findElement {using=id, value=gender-male}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.120, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\Personal\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56569}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56569/devtoo..., se:cdpVersion: 137.0.7151.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 5e11e19f03bb697e1d9c9d079425ec6b
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:66)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy30.click(Unknown Source)
at pages.RegisterPage.selectGender(RegisterPage.java:69)
at tests.RegisterTest.testMismatchedPasswords(RegisterTest.java:43)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMismatchedPasswords -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.RegisterTest@ae13544]" started-at="2025-06-25T22:49:21 CST" name="tearDown" finished-at="2025-06-25T22:49:21 CST" duration-ms="280" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMismatchedPasswords status=FAILURE method=RegisterTest.testMismatchedPasswords()[pri:0, instance:tests.RegisterTest@ae13544] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.RegisterTest@ae13544]" started-at="2025-06-25T22:49:21 CST" name="setup" finished-at="2025-06-25T22:49:23 CST" duration-ms="1981" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSuccessfulRegistration()[pri:0, instance:tests.RegisterTest@ae13544]" started-at="2025-06-25T22:49:23 CST" name="testSuccessfulRegistration" finished-at="2025-06-25T22:49:24 CST" duration-ms="1106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessfulRegistration -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.RegisterTest@ae13544]" started-at="2025-06-25T22:49:24 CST" name="tearDown" finished-at="2025-06-25T22:49:25 CST" duration-ms="134" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSuccessfulRegistration status=SUCCESS method=RegisterTest.testSuccessfulRegistration()[pri:0, instance:tests.RegisterTest@ae13544] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDownReport()[pri:0, instance:tests.RegisterTest@ae13544]" started-at="2025-06-25T22:49:25 CST" name="tearDownReport" finished-at="2025-06-25T22:49:25 CST" duration-ms="228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownReport -->
      </class> <!-- tests.RegisterTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
